services:
  postgres:
    image: timescale/timescaledb:latest-pg16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0-alpine
    container_name: redis-prod
    command:
      [
        "redis-server",
        "--requirepass",
        "${REDIS_PASSWORD}",
        "--save",
        "20",
        "1",
        "--loglevel",
        "warning",
      ]
    ports:
      - "6379:6379" # Prefer binding only to internal network in secure environments
    volumes:
      - redis-data:/data # Enables persistence across restarts
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    restart: always

  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    environment:
      FRONTEND_URL: http://frontend:3000
      DATABASE_URL: ${DATABASE_URL}
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres

  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://backend:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  postgres-data:
  redis-data:
    driver: local
